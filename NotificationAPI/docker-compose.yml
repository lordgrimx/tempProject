version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - notification_api_1
      - notification_api_2
      - notification_api_3
    networks:
      - notification_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health", "--max-time", "5"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  notification_api_1:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - MongoDbSettings__ConnectionString=mongodb://mongodb:27017
      - MongoDbSettings__DatabaseName=NotificationDb
      - RabbitMQSettings__HostName=rabbitmq
      - RabbitMQSettings__UserName=guest
      - RabbitMQSettings__Password=guest
      - RabbitMQSettings__Port=5672
      - RabbitMQSettings__NotificationQueueName=notifications
      - RabbitMQSettings__BatchSize=100
      - RabbitMQSettings__ConcurrentConsumers=3
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - notification_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  notification_api_2:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - MongoDbSettings__ConnectionString=mongodb://mongodb:27017
      - MongoDbSettings__DatabaseName=NotificationDb
      - RabbitMQSettings__HostName=rabbitmq
      - RabbitMQSettings__UserName=guest
      - RabbitMQSettings__Password=guest
      - RabbitMQSettings__Port=5672
      - RabbitMQSettings__NotificationQueueName=notifications
      - RabbitMQSettings__BatchSize=100
      - RabbitMQSettings__ConcurrentConsumers=3
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - notification_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  notification_api_3:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - MongoDbSettings__ConnectionString=mongodb://mongodb:27017
      - MongoDbSettings__DatabaseName=NotificationDb
      - RabbitMQSettings__HostName=rabbitmq
      - RabbitMQSettings__UserName=guest
      - RabbitMQSettings__Password=guest
      - RabbitMQSettings__Port=5672
      - RabbitMQSettings__NotificationQueueName=notifications
      - RabbitMQSettings__BatchSize=100
      - RabbitMQSettings__ConcurrentConsumers=3
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - notification_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - notification_network
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=NotificationDb
    command: ["--wiredTigerCacheSizeGB", "1"]
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - notification_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

networks:
  notification_network:
    driver: bridge

volumes:
  mongodb_data:
  rabbitmq_data:
